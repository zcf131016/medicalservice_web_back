<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.medicalservice.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.medicalservice.domain.User">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="role_id" jdbcType="INTEGER" property="roleId" />
        <result column="username" jdbcType="VARCHAR" property="userName" />
        <result column="sex" jdbcType="VARCHAR" property="sex" />
        <result column="password" jdbcType="VARCHAR" property="passWord" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="department" jdbcType="VARCHAR" property="department" />
        <result column="grade" jdbcType="VARCHAR" property="grade" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="creat_time" jdbcType="DATE" property="creatTime"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
    </resultMap>

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id" parameterType="com.example.medicalservice.domain.User">
        INSERT into
            users(username,password,user_id,sex,phone,email,role_id,department,grade,title,real_name,avatar) values
            (#{userName},#{passWord},#{userId},#{sex},#{phone},#{email},#{roleId},#{department},#{grade},#{title},#{realName},#{avatar});

    </insert>


    <update id="updateUser" parameterType="com.example.medicalservice.domain.User">
        UPDATE users
        <trim prefix="set" suffixOverrides=",">
            <if test="userName!=null">username=#{userName},</if>
            <if test="passWord!=null">password=#{passWord},</if>
            <if test="sex!=null">sex=#{sex},</if>
            <if test="phone!=null">phone=#{phone},</if>
            <if test="email!=null">email=#{email},</if>
            <if test="department!=null">department=#{department},</if>
            <if test="grade!=null">grade=#{grade},</if>
            <if test="title!=null">title=#{title},</if>
            <if test="realName!=null">real_name=#{realName},</if>
            <if test="avatar!=null">avatar=#{avatar},</if>
        </trim>
        where user_id = #{userId}

    </update>


    <update id="updatePasswordByEmail">
        UPDATE users
        <trim prefix="set" suffixOverrides=",">
            <if test="passWord!=null">password=#{passWord},</if>
        </trim>
        where email = #{email}

    </update>

    <delete id="deleteUserByUserId" parameterType="java.lang.Integer">
        delete from users where user_id = #{userId}
    </delete>

    <delete id="deleteUserAllByUserIds" parameterType="java.util.List">
        delete from
        users  where user_id in
        <foreach collection="userIds"  open="(" close=")" separator=","  item="item">
            #{item}
        </foreach>
    </delete>

    <select id="findAllUser" resultMap="BaseResultMap">
        select * from  users
    </select>

    <select id="getUser" resultType="com.example.medicalservice.domain.User" parameterType="java.lang.String">
        select * from users where username = #{username}
    </select>

    <select id="getUserByUserId" resultType="com.example.medicalservice.domain.User"  parameterType="java.lang.Integer">
        select * from users where user_id = #{userId}
    </select>

    <select id="selectAllUser" resultType="com.example.medicalservice.domain.User">
        select * from users
    </select>

    <select id="getUserByRealName" resultType="com.example.medicalservice.domain.User" parameterType="java.lang.String">
        select * from users where real_name = #{realName}
    </select>

    <select id="findAllTeacher" resultType="com.example.medicalservice.domain.User">
        select * from users where role_id = 1
    </select>

    <select id="findAllStudent" resultType="com.example.medicalservice.domain.User">
        select * from users where role_id = 2
    </select>
    <select id="selectAllStudent" resultType="com.example.medicalservice.domain.User" parameterType="com.example.medicalservice.domain.Page">
        select * from users where role_id = 2
    </select>
    <select id="selectAllTeacher" resultType="com.example.medicalservice.domain.User" parameterType="com.example.medicalservice.domain.Page">
        select * from users where role_id = 1
    </select>

    <select id="getUserByEmail" resultType="com.example.medicalservice.domain.User" parameterType="java.lang.String">
        select * from users where email = #{email}
    </select>
    <select id="getUserByPhone" resultType="com.example.medicalservice.domain.User" parameterType="java.lang.String">
        select * from users where phone = #{phone}
    </select>


</mapper>






